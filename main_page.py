import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import time
import sys
import os
import plotly.express as px

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
from data_utils import load_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ê–Ω–∞–ª–∏–∑ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤",
    page_icon="üìä",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üåê –ê–Ω–∞–ª–∏–∑ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ —Å—Ç—Ä–∞–Ω")
st.write("–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —á–∏—Å—Ç–æ–º —ç–∫—Å–ø–æ—Ä—Ç–µ –∏ –≤—ã—è–≤–ª—è—Ç—å —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è)
with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö..."):
    df, load_time = load_data()
    st.success(f"–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–∞ {load_time:.2f} —Å–µ–∫—É–Ω–¥!")

# –ü–æ–∫–∞–∑ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∞–Ω–Ω—ã—Ö
st.subheader("–û–±–∑–æ—Ä –¥–∞–Ω–Ω—ã—Ö")
st.write(f"–†–∞–∑–º–µ—Ä –¥–∞—Ç–∞—Å–µ—Ç–∞: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω", df['country'].nunique())
with col2:
    st.metric("–í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤", df['hs_product_description'].nunique())
with col3:
    st.metric("–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π", df.shape[0])

# –§–∏–ª—å—Ç—Ä—ã
st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")

# –°–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–ø —Å—Ç—Ä–∞–Ω –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
with st.form("filter_form"):
    col1, col2 = st.columns(2)
    
    with col1:
        top_countries = st.slider(
            "–¢–æ–ø —Å—Ç—Ä–∞–Ω –ø–æ –æ–±—ä–µ–º—É —Ç–æ—Ä–≥–æ–≤–ª–∏", 
            min_value=5, 
            max_value=min(200, df['country'].nunique()), 
            value=50,
            help="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"
        )
    
    with col2:
        top_products = st.slider(
            "–¢–æ–ø –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –æ–±—ä–µ–º—É —Ç–æ—Ä–≥–æ–≤–ª–∏", 
            min_value=5, 
            max_value=min(5000, df['hs_product_description'].nunique()), 
            value=100,
            help="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"
        )
    
    submit_button = st.form_submit_button("–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã")

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if submit_button or 'filtered_data' not in st.session_state:
    with st.spinner("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤..."):
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ø —Å—Ç—Ä–∞–Ω –ø–æ –æ–±—ä–µ–º—É —Ç–æ—Ä–≥–æ–≤–ª–∏
        top_countries_list = df.groupby('country')['value_1000_usd'].sum().sort_values(ascending=False).head(top_countries).index.tolist()
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ø –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –æ–±—ä–µ–º—É —Ç–æ—Ä–≥–æ–≤–ª–∏
        top_products_list = df.groupby('hs_product_description')['value_1000_usd'].sum().sort_values(ascending=False).head(top_products).index.tolist()
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        filtered_data = df[
            (df['country'].isin(top_countries_list)) & 
            (df['hs_product_description'].isin(top_products_list))
        ]
        
        st.session_state['filtered_data'] = filtered_data
        st.session_state['top_countries_list'] = top_countries_list
        st.session_state['top_products_list'] = top_products_list

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
if 'filtered_data' in st.session_state:
    filtered_data = st.session_state['filtered_data']
    
    st.subheader("–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    st.write(f"–í—ã–±—Ä–∞–Ω–æ {len(st.session_state['top_countries_list'])} —Å—Ç—Ä–∞–Ω –∏ {len(st.session_state['top_products_list'])} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    st.write(f"–†–∞–∑–º–µ—Ä –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {filtered_data.shape[0]} —Å—Ç—Ä–æ–∫")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    display_data = filtered_data.copy()
    display_data['value_1000_usd'] = display_data['value_1000_usd'].apply(lambda x: f"${x/1000000:.0f} bln")
    display_data.rename(columns={'value_1000_usd': '–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (–º–ª—Ä–¥ USD)'}, inplace=True)
    st.dataframe(display_data.head(20))

    # –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–∞–Ω
    st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º")
    country_stats = filtered_data.groupby('country')['value_1000_usd'].agg(['sum', 'mean', 'count']).sort_values('sum', ascending=False)
    country_stats.columns = ['–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (—Ç—ã—Å. USD)', '–°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (—Ç—ã—Å. USD)', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤']
    st.dataframe(country_stats)
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ –º–∏—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º plotly
    st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –Ω–∞ –∫–∞—Ä—Ç–µ –º–∏—Ä–∞ (—É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç—Ä–∞–Ω–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å—Ç—ã–º —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä–æ–º)")
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ä—Ç—ã
    country_trade_data = country_stats.reset_index()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å –ø–æ–º–æ—â—å—é plotly
    fig = px.choropleth(
        country_trade_data,
        locations='country',  # –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å—Ç—Ä–∞–Ω
        locationmode='country names',  # —Ä–µ–∂–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        color='–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (—Ç—ã—Å. USD)',  # –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ü–≤–µ—Ç–æ–≤–æ–π —à–∫–∞–ª—ã
        hover_name='country',  # –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏
        color_continuous_scale='Viridis',  # —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
        title='–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º',
        labels={'–û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (—Ç—ã—Å. USD)': '–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ (—Ç—ã—Å. USD)'}
    )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∫–∞—Ä—Ç—ã
    fig.update_layout(
        geo=dict(
            showframe=False,
            showcoastlines=True,
            projection_type='natural earth'
        ),
        height=600,
        margin={"r":0,"t":40,"l":0,"b":0}
    )
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
    st.plotly_chart(fig, use_container_width=True)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–±—É—á–µ–Ω–∏—é –º–æ–¥–µ–ª–∏
    st.subheader("–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤")
    st.write("–î–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –Ω–∞ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏:")
    if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—É—á–µ–Ω–∏—é –º–æ–¥–µ–ª–∏", type="primary"):
        st.switch_page("pages/learn_model.py")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
with st.expander("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"):
    st.markdown("""
    ### –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    3. –ò–∑—É—á–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –≥—Ä–∞—Ñ–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    4. –ß—Ç–æ–±—ã –æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    
    –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ —Ñ–∞–π–ª–∞ `data/net_export.csv` –∏ –∫—ç—à–∏—Ä—É—é—Ç—Å—è –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
    """)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
st.sidebar.header("–û –ø—Ä–æ–µ–∫—Ç–µ")
st.sidebar.info("""
    –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ —Å—Ç—Ä–∞–Ω
    –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ —á–∏—Å—Ç–æ–º —ç–∫—Å–ø–æ—Ä—Ç–µ.
""")

# –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
st.sidebar.header("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
st.sidebar.page_link("main_page.py", label="–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", icon="üè†")
st.sidebar.page_link("pages/learn_model.py", label="–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏", icon="üß†") 